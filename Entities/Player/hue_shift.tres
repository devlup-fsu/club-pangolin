[gd_resource type="VisualShader" load_steps=16 format=3 uid="uid://bducsy7hhfs0m"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_kfmr6"]
default_input_values = [0, 1.0, 1, 1.0, 2, 1.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_0mjhd"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_7olfr"]
function = 1

[sub_resource type="VisualShaderNodeUVPolarCoord" id="VisualShaderNodeUVPolarCoord_jkfco"]
default_input_values = [1, Vector2(0.5, 1), 2, 0.2, 3, 1.0]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ed5nq"]
input_name = "time"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_l8f7p"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_fp4pw"]
parameter_name = "isSpectral"
default_value_enabled = true

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_aic0v"]
default_input_values = [0, 0.0, 1, -0.5]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_2qrpf"]
input_name = "texture"

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_4yq3v"]
function = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ikc0l"]
source = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_k0gcm"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ik7p2"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_w8uiq"]
parameter_name = "Color"
default_value_enabled = true
default_value = Color(0.970446, 0.289487, 1, 1)

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_0q107"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.4, 0.4, 0.4), 2, Vector3(1, 1, 1)]
op_type = 4

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool isSpectral = false;
uniform vec4 Color : source_color = vec4(0.970446, 0.289487, 1.000000, 1.000000);



void fragment() {
	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(TEXTURE, UV);


	vec3 n_out3p0;
// ColorFunc:3
	{
		vec3 c = vec3(n_out4p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out3p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}


// VectorDecompose:5
	float n_out5p0 = vec4(n_out3p0, 0.0).x;
	float n_out5p1 = vec4(n_out3p0, 0.0).y;
	float n_out5p2 = vec4(n_out3p0, 0.0).z;
	float n_out5p3 = vec4(n_out3p0, 0.0).w;


// BooleanParameter:17
	bool n_out17p0 = isSpectral;


	vec2 n_out14p0;
// UVPolarCoord:14
	vec2 n_in14p1 = vec2(0.50000, 1.00000);
	float n_in14p2 = 0.20000;
	float n_in14p3 = 1.00000;
	{
		vec2 __dir = UV - n_in14p1;
		float __radius = length(__dir) * 2.0;
		float __angle = atan(__dir.y, __dir.x) * 1.0 / (PI * 2.0);
		n_out14p0 = mod(vec2(__radius * n_in14p2, __angle * n_in14p3), 1.0);
	}


// Input:15
	float n_out15p0 = TIME;


// FloatOp:18
	float n_in18p1 = -0.50000;
	float n_out18p0 = n_out15p0 * n_in18p1;


// FloatOp:11
	float n_out11p0 = n_out14p0.x + n_out18p0;


// VectorCompose:10
	float n_in10p1 = 1.00000;
	float n_in10p2 = 1.00000;
	vec3 n_out10p0 = vec3(n_out11p0, n_in10p1, n_in10p2);


	vec3 n_out12p0;
// ColorFunc:12
	{
		vec3 c = n_out10p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out12p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}


// ColorParameter:7
	vec4 n_out7p0 = Color;


	vec3 n_out16p0;
// If:16
	float n_in16p1 = 1.00000;
	float n_in16p2 = 0.00001;
	if(abs((n_out17p0 ? 1.0 : 0.0) - n_in16p1) < n_in16p2)
	{
		n_out16p0 = n_out12p0;
	}
	else if((n_out17p0 ? 1.0 : 0.0) < n_in16p1)
	{
		n_out16p0 = vec3(n_out7p0.xyz);
	}
	else
	{
		n_out16p0 = vec3(n_out7p0.xyz);
	}


// Clamp:9
	vec3 n_in9p1 = vec3(0.40000, 0.40000, 0.40000);
	vec3 n_in9p2 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out9p0 = clamp(n_out16p0, n_in9p1, n_in9p2);


// VectorOp:6
	vec3 n_out6p0 = vec3(n_out5p2) * n_out9p0;


// Output:0
	COLOR.rgb = n_out6p0;


}
"
graph_offset = Vector2(-971.646, 407.807)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(720, 260)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_2qrpf")
nodes/fragment/2/position = Vector2(-1060, 420)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorFunc_4yq3v")
nodes/fragment/3/position = Vector2(-260, 280)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_ikc0l")
nodes/fragment/4/position = Vector2(-620, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorDecompose_k0gcm")
nodes/fragment/5/position = Vector2(40, 240)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_ik7p2")
nodes/fragment/6/position = Vector2(440, 260)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorParameter_w8uiq")
nodes/fragment/7/position = Vector2(-920, 860)
nodes/fragment/9/node = SubResource("VisualShaderNodeClamp_0q107")
nodes/fragment/9/position = Vector2(120, 660)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorCompose_kfmr6")
nodes/fragment/10/position = Vector2(-800, 1420)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatOp_0mjhd")
nodes/fragment/11/position = Vector2(-1020, 1420)
nodes/fragment/12/node = SubResource("VisualShaderNodeColorFunc_7olfr")
nodes/fragment/12/position = Vector2(-560, 1340)
nodes/fragment/14/node = SubResource("VisualShaderNodeUVPolarCoord_jkfco")
nodes/fragment/14/position = Vector2(-1340, 1300)
nodes/fragment/15/node = SubResource("VisualShaderNodeInput_ed5nq")
nodes/fragment/15/position = Vector2(-1720, 1560)
nodes/fragment/16/node = SubResource("VisualShaderNodeIf_l8f7p")
nodes/fragment/16/position = Vector2(-200, 680)
nodes/fragment/17/node = SubResource("VisualShaderNodeBooleanParameter_fp4pw")
nodes/fragment/17/position = Vector2(-1020, 600)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatOp_aic0v")
nodes/fragment/18/position = Vector2(-1280, 1560)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 2, 4, 0, 3, 0, 3, 0, 5, 0, 5, 2, 6, 0, 9, 0, 6, 1, 10, 0, 12, 0, 14, 0, 11, 0, 11, 0, 10, 0, 7, 0, 16, 4, 7, 0, 16, 5, 16, 0, 9, 0, 17, 0, 16, 0, 12, 0, 16, 3, 6, 0, 0, 0, 15, 0, 18, 0, 18, 0, 11, 1)
